"use strict";function cov_ly32iabp4(){var path="/Users/andres/Library/Mobile Documents/com~apple~CloudDocs/ULL/ASIGNATURAS/PRACTICAS/DSI2021/prct08-filesystem-notes-app/src/note.ts";var hash="7e7116f4a50372eafe1822f2dc78b09cdc859723";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/andres/Library/Mobile Documents/com~apple~CloudDocs/ULL/ASIGNATURAS/PRACTICAS/DSI2021/prct08-filesystem-notes-app/src/note.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:0},end:{line:3,column:22}},"2":{start:{line:4,column:14},end:{line:4,column:30}},"3":{start:{line:5,column:11},end:{line:5,column:24}},"4":{start:{line:12,column:8},end:{line:12,column:25}},"5":{start:{line:19,column:8},end:{line:19,column:25}},"6":{start:{line:32,column:19},end:{line:32,column:38}},"7":{start:{line:33,column:8},end:{line:49,column:9}},"8":{start:{line:34,column:12},end:{line:41,column:13}},"9":{start:{line:35,column:16},end:{line:35,column:84}},"10":{start:{line:37,column:30},end:{line:37,column:78}},"11":{start:{line:38,column:34},end:{line:38,column:57}},"12":{start:{line:39,column:16},end:{line:39,column:76}},"13":{start:{line:40,column:16},end:{line:40,column:71}},"14":{start:{line:44,column:12},end:{line:44,column:31}},"15":{start:{line:45,column:26},end:{line:45,column:74}},"16":{start:{line:46,column:30},end:{line:46,column:53}},"17":{start:{line:47,column:12},end:{line:47,column:72}},"18":{start:{line:48,column:12},end:{line:48,column:67}},"19":{start:{line:61,column:19},end:{line:61,column:38}},"20":{start:{line:62,column:8},end:{line:71,column:9}},"21":{start:{line:63,column:12},end:{line:63,column:52}},"22":{start:{line:64,column:26},end:{line:64,column:74}},"23":{start:{line:65,column:30},end:{line:65,column:53}},"24":{start:{line:66,column:12},end:{line:66,column:72}},"25":{start:{line:67,column:12},end:{line:67,column:70}},"26":{start:{line:70,column:12},end:{line:70,column:80}},"27":{start:{line:80,column:19},end:{line:80,column:38}},"28":{start:{line:81,column:8},end:{line:87,column:9}},"29":{start:{line:82,column:12},end:{line:82,column:52}},"30":{start:{line:83,column:12},end:{line:83,column:69}},"31":{start:{line:86,column:12},end:{line:86,column:80}},"32":{start:{line:95,column:19},end:{line:95,column:38}},"33":{start:{line:96,column:8},end:{line:106,column:9}},"34":{start:{line:97,column:12},end:{line:97,column:77}},"35":{start:{line:100,column:24},end:{line:100,column:44}},"36":{start:{line:101,column:12},end:{line:105,column:15}},"37":{start:{line:102,column:35},end:{line:102,column:78}},"38":{start:{line:103,column:31},end:{line:103,column:55}},"39":{start:{line:104,column:16},end:{line:104,column:81}},"40":{start:{line:116,column:19},end:{line:116,column:38}},"41":{start:{line:117,column:8},end:{line:124,column:9}},"42":{start:{line:118,column:31},end:{line:118,column:85}},"43":{start:{line:119,column:27},end:{line:119,column:51}},"44":{start:{line:120,column:12},end:{line:120,column:76}},"45":{start:{line:123,column:12},end:{line:123,column:80}},"46":{start:{line:127,column:0},end:{line:127,column:20}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:4},end:{line:11,column:5}},loc:{start:{line:11,column:22},end:{line:13,column:5}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:18,column:4},end:{line:18,column:5}},loc:{start:{line:18,column:14},end:{line:20,column:5}},line:18},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:4},end:{line:31,column:5}},loc:{start:{line:31,column:32},end:{line:50,column:5}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:60,column:4},end:{line:60,column:5}},loc:{start:{line:60,column:35},end:{line:72,column:5}},line:60},"4":{name:"(anonymous_4)",decl:{start:{line:79,column:4},end:{line:79,column:5}},loc:{start:{line:79,column:22},end:{line:88,column:5}},line:79},"5":{name:"(anonymous_5)",decl:{start:{line:94,column:4},end:{line:94,column:5}},loc:{start:{line:94,column:16},end:{line:107,column:5}},line:94},"6":{name:"(anonymous_6)",decl:{start:{line:101,column:26},end:{line:101,column:27}},loc:{start:{line:101,column:34},end:{line:105,column:13}},line:101},"7":{name:"(anonymous_7)",decl:{start:{line:115,column:4},end:{line:115,column:5}},loc:{start:{line:115,column:20},end:{line:125,column:5}},line:115}},branchMap:{"0":{loc:{start:{line:33,column:8},end:{line:49,column:9}},type:"if",locations:[{start:{line:33,column:8},end:{line:49,column:9}},{start:{line:33,column:8},end:{line:49,column:9}}],line:33},"1":{loc:{start:{line:34,column:12},end:{line:41,column:13}},type:"if",locations:[{start:{line:34,column:12},end:{line:41,column:13}},{start:{line:34,column:12},end:{line:41,column:13}}],line:34},"2":{loc:{start:{line:62,column:8},end:{line:71,column:9}},type:"if",locations:[{start:{line:62,column:8},end:{line:71,column:9}},{start:{line:62,column:8},end:{line:71,column:9}}],line:62},"3":{loc:{start:{line:81,column:8},end:{line:87,column:9}},type:"if",locations:[{start:{line:81,column:8},end:{line:87,column:9}},{start:{line:81,column:8},end:{line:87,column:9}}],line:81},"4":{loc:{start:{line:96,column:8},end:{line:106,column:9}},type:"if",locations:[{start:{line:96,column:8},end:{line:106,column:9}},{start:{line:96,column:8},end:{line:106,column:9}}],line:96},"5":{loc:{start:{line:117,column:8},end:{line:124,column:9}},type:"if",locations:[{start:{line:117,column:8},end:{line:124,column:9}},{start:{line:117,column:8},end:{line:124,column:9}}],line:117}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},inputSourceMap:{version:3,file:"/Users/andres/Library/Mobile Documents/com~apple~CloudDocs/ULL/ASIGNATURAS/PRACTICAS/DSI2021/prct08-filesystem-notes-app/src/note.ts",sources:["/Users/andres/Library/Mobile Documents/com~apple~CloudDocs/ULL/ASIGNATURAS/PRACTICAS/DSI2021/prct08-filesystem-notes-app/src/note.ts"],names:[],mappings:"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",sourcesContent:["import * as chalk from 'chalk';\nimport * as fs from 'fs';\n\n\nexport class Note {\n\n    private user: string;\n\n    /**\n   * Constructor de la clase Nota\n   * @param user usuario\n   */\n\n    constructor(user: string) {\n        this.user = user;\n    }\n\n    /**\n   * Getter de la clase Nota\n   * @returns @param user nombre de usuario\n   */\n\n    getUser() {\n        return this.user;\n    }\n\n    /**\n   * Funci\xF3n addNote, crea una nueva nota en el directorio del usuario @param user\n   * o crea el directorio si no existe. Cada nota se almacena en un fichero JSON\n   * separado. \n   * @param title T\xEDtulo de la nota a crear\n   * @param body Cuerpo de la nota a crear\n   * @param color Color de la nota a crear\n   * La funci\xF3n @returns un mensaje de \xE9xito o error seg\xFAn haya podido crear la nota, \n   * o esta ya exista.\n   */\n\n    addNote(title: string, body: string, color: string) {\n        \n        let path: string = 'user/' + this.user;\n        \n        if (fs.existsSync(path)) {\n            if (fs.existsSync(path + \"/\" + title + '.json'))\n                console.log(chalk.red(\"ERROR - Ya existe una nota con ese nombre\"));\n            else {\n                let newNote = {\"title\": title, \"body\": body, \"color\": color};\n                let newNoteJSON = JSON.stringify(newNote);\n                fs.writeFileSync(path + \"/\" + title + '.json', newNoteJSON)\n                console.log(chalk.green(\"Nota a\xF1adida correctamente\"));\n            }\n        }\n        else {\n            fs.mkdirSync(path);\n            let newNote = {\"title\": title, \"body\": body, \"color\": color};\n            let newNoteJSON = JSON.stringify(newNote);\n            fs.writeFileSync(path + \"/\" + title + '.json', newNoteJSON)\n            console.log(chalk.green(\"Nota a\xF1adida correctamente\"));\n        }\n    }\n        \n        \n\n    /**\n   * Funci\xF3n modifyNote, modifica una nota ya creada. Permite cambiar el cuerpo de la \n   * nota y el color.\n   * @param title T\xEDtulo de la nota que se modifica\n   * @param body Cuerpo de la nota que se modifica\n   * @param color Color de la nota que se modifica\n   * La funci\xF3n @returns un mensaje de \xE9xito o error seg\xFAn haya podido modificar la nota, \n   * o esta no exista.\n   */\n    modifyNote(title: string, body: string, color: string) {\n\n        let path: string = 'user/' + this.user;\n        \n        if (fs.existsSync(path + \"/\" + title + '.json')) {\n            fs.rmSync(path + \"/\" + title + '.json');\n            let modNote = {\"title\": title, \"body\": body, \"color\": color};\n            let modNoteJSON = JSON.stringify(modNote);\n            fs.writeFileSync(path + \"/\" + title + '.json', modNoteJSON)\n            console.log(chalk.green(\"Nota modificada correctamente\"));\n        }\n        else {\n            console.log(chalk.red(\"ERROR - No existe una nota con ese nombre\"));\n        }\n    }\n\n\n\n    /**\n   * Funci\xF3n removeNote, elimina una nota ya creada. Para ello comprueba que la nota existe.\n   * @param title T\xEDtulo de la nota que se elimina\n   * La funci\xF3n @returns un mensaje de \xE9xito o error seg\xFAn haya podido eliminar la nota o\n   * esta no exista.\n   */\n\n    removeNote(title: string) {\n\n        let path: string = 'user/' + this.user;\n        \n        if (fs.existsSync(path + \"/\" + title + '.json')) {\n            fs.rmSync(path + \"/\" + title + '.json');\n            console.log(chalk.green(\"Nota eliminada correctamente\"));\n        }\n        else {\n            console.log(chalk.red(\"ERROR - No existe una nota con ese nombre\"));\n        }\n    }\n\n\n\n    /**\n   * Funci\xF3n listNote, elimina una nota ya creada. Para ello comprueba que la nota existe.\n   * La funci\xF3n @returns una lista de los t\xEDtulos de las notas en su color correspondiente \n   * o un mensaje de error si no existen notas.\n   */\n\n    listNotes(){\n\n        let path: string = 'user/' + this.user;\n        \n        if (fs.readdirSync(path).length === 0) {\n            console.log(chalk.red(\"ERROR - El usuario no dispone de notas\"));\n        }\n        else {\n            let notes = fs.readdirSync(path);\n            notes.forEach(note => {\n                let readNoteJSON = fs.readFileSync(path + \"/\" + note, \"utf-8\");\n                let readNote = JSON.parse(readNoteJSON);\n                console.log(chalk.keyword(readNote[\"color\"])(readNote[\"title\"]));\n            });\n        }\n    }\n\n    /**\n   * Funci\xF3n readNote, lee una nota del usuario y la muestra por pantalla. Para ello \n   * comprueba que la nota existe.\n   * @param title t\xEDtulo de la nota a mostrar\n   * La funci\xF3n @returns el cuerpo de la nota en su color correspondiente\n   * o un mensaje de error si no existe la nota.\n   */\n\n    readNote(title: string){\n\n        let path: string = 'user/' + this.user;\n        \n        if (fs.existsSync(path + \"/\" + title + '.json')) {\n            let readNoteJSON = fs.readFileSync(path + \"/\" + title + '.json', \"utf-8\");\n            let readNote = JSON.parse(readNoteJSON);\n            console.log(chalk.keyword(readNote[\"color\"])(readNote[\"body\"]));\n        }\n        else {\n            console.log(chalk.red(\"ERROR - No existe una nota con ese nombre\"));\n        }\n    }\n}"]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7e7116f4a50372eafe1822f2dc78b09cdc859723"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_ly32iabp4=function(){return actualCoverage;};}return actualCoverage;}cov_ly32iabp4();cov_ly32iabp4().s[0]++;Object.defineProperty(exports,"__esModule",{value:true});cov_ly32iabp4().s[1]++;exports.Note=void 0;const chalk=(cov_ly32iabp4().s[2]++,require("chalk"));const fs=(cov_ly32iabp4().s[3]++,require("fs"));class Note{/**
   * Constructor de la clase Nota
   * @param user usuario
   */constructor(user){cov_ly32iabp4().f[0]++;cov_ly32iabp4().s[4]++;this.user=user;}/**
   * Getter de la clase Nota
   * @returns @param user nombre de usuario
   */getUser(){cov_ly32iabp4().f[1]++;cov_ly32iabp4().s[5]++;return this.user;}/**
   * Función addNote, crea una nueva nota en el directorio del usuario @param user
   * o crea el directorio si no existe. Cada nota se almacena en un fichero JSON
   * separado.
   * @param title Título de la nota a crear
   * @param body Cuerpo de la nota a crear
   * @param color Color de la nota a crear
   * La función @returns un mensaje de éxito o error según haya podido crear la nota,
   * o esta ya exista.
   */addNote(title,body,color){cov_ly32iabp4().f[2]++;let path=(cov_ly32iabp4().s[6]++,'user/'+this.user);cov_ly32iabp4().s[7]++;if(fs.existsSync(path)){cov_ly32iabp4().b[0][0]++;cov_ly32iabp4().s[8]++;if(fs.existsSync(path+"/"+title+'.json')){cov_ly32iabp4().b[1][0]++;cov_ly32iabp4().s[9]++;console.log(chalk.red("ERROR - Ya existe una nota con ese nombre"));}else{cov_ly32iabp4().b[1][1]++;let newNote=(cov_ly32iabp4().s[10]++,{"title":title,"body":body,"color":color});let newNoteJSON=(cov_ly32iabp4().s[11]++,JSON.stringify(newNote));cov_ly32iabp4().s[12]++;fs.writeFileSync(path+"/"+title+'.json',newNoteJSON);cov_ly32iabp4().s[13]++;console.log(chalk.green("Nota añadida correctamente"));}}else{cov_ly32iabp4().b[0][1]++;cov_ly32iabp4().s[14]++;fs.mkdirSync(path);let newNote=(cov_ly32iabp4().s[15]++,{"title":title,"body":body,"color":color});let newNoteJSON=(cov_ly32iabp4().s[16]++,JSON.stringify(newNote));cov_ly32iabp4().s[17]++;fs.writeFileSync(path+"/"+title+'.json',newNoteJSON);cov_ly32iabp4().s[18]++;console.log(chalk.green("Nota añadida correctamente"));}}/**
   * Función modifyNote, modifica una nota ya creada. Permite cambiar el cuerpo de la
   * nota y el color.
   * @param title Título de la nota que se modifica
   * @param body Cuerpo de la nota que se modifica
   * @param color Color de la nota que se modifica
   * La función @returns un mensaje de éxito o error según haya podido modificar la nota,
   * o esta no exista.
   */modifyNote(title,body,color){cov_ly32iabp4().f[3]++;let path=(cov_ly32iabp4().s[19]++,'user/'+this.user);cov_ly32iabp4().s[20]++;if(fs.existsSync(path+"/"+title+'.json')){cov_ly32iabp4().b[2][0]++;cov_ly32iabp4().s[21]++;fs.rmSync(path+"/"+title+'.json');let modNote=(cov_ly32iabp4().s[22]++,{"title":title,"body":body,"color":color});let modNoteJSON=(cov_ly32iabp4().s[23]++,JSON.stringify(modNote));cov_ly32iabp4().s[24]++;fs.writeFileSync(path+"/"+title+'.json',modNoteJSON);cov_ly32iabp4().s[25]++;console.log(chalk.green("Nota modificada correctamente"));}else{cov_ly32iabp4().b[2][1]++;cov_ly32iabp4().s[26]++;console.log(chalk.red("ERROR - No existe una nota con ese nombre"));}}/**
   * Función removeNote, elimina una nota ya creada. Para ello comprueba que la nota existe.
   * @param title Título de la nota que se elimina
   * La función @returns un mensaje de éxito o error según haya podido eliminar la nota o
   * esta no exista.
   */removeNote(title){cov_ly32iabp4().f[4]++;let path=(cov_ly32iabp4().s[27]++,'user/'+this.user);cov_ly32iabp4().s[28]++;if(fs.existsSync(path+"/"+title+'.json')){cov_ly32iabp4().b[3][0]++;cov_ly32iabp4().s[29]++;fs.rmSync(path+"/"+title+'.json');cov_ly32iabp4().s[30]++;console.log(chalk.green("Nota eliminada correctamente"));}else{cov_ly32iabp4().b[3][1]++;cov_ly32iabp4().s[31]++;console.log(chalk.red("ERROR - No existe una nota con ese nombre"));}}/**
   * Función listNote, elimina una nota ya creada. Para ello comprueba que la nota existe.
   * La función @returns una lista de los títulos de las notas en su color correspondiente
   * o un mensaje de error si no existen notas.
   */listNotes(){cov_ly32iabp4().f[5]++;let path=(cov_ly32iabp4().s[32]++,'user/'+this.user);cov_ly32iabp4().s[33]++;if(fs.readdirSync(path).length===0){cov_ly32iabp4().b[4][0]++;cov_ly32iabp4().s[34]++;console.log(chalk.red("ERROR - El usuario no dispone de notas"));}else{cov_ly32iabp4().b[4][1]++;let notes=(cov_ly32iabp4().s[35]++,fs.readdirSync(path));cov_ly32iabp4().s[36]++;notes.forEach(note=>{cov_ly32iabp4().f[6]++;let readNoteJSON=(cov_ly32iabp4().s[37]++,fs.readFileSync(path+"/"+note,"utf-8"));let readNote=(cov_ly32iabp4().s[38]++,JSON.parse(readNoteJSON));cov_ly32iabp4().s[39]++;console.log(chalk.keyword(readNote["color"])(readNote["title"]));});}}/**
   * Función readNote, lee una nota del usuario y la muestra por pantalla. Para ello
   * comprueba que la nota existe.
   * @param title título de la nota a mostrar
   * La función @returns el cuerpo de la nota en su color correspondiente
   * o un mensaje de error si no existe la nota.
   */readNote(title){cov_ly32iabp4().f[7]++;let path=(cov_ly32iabp4().s[40]++,'user/'+this.user);cov_ly32iabp4().s[41]++;if(fs.existsSync(path+"/"+title+'.json')){cov_ly32iabp4().b[5][0]++;let readNoteJSON=(cov_ly32iabp4().s[42]++,fs.readFileSync(path+"/"+title+'.json',"utf-8"));let readNote=(cov_ly32iabp4().s[43]++,JSON.parse(readNoteJSON));cov_ly32iabp4().s[44]++;console.log(chalk.keyword(readNote["color"])(readNote["body"]));}else{cov_ly32iabp4().b[5][1]++;cov_ly32iabp4().s[45]++;console.log(chalk.red("ERROR - No existe una nota con ese nombre"));}}}cov_ly32iabp4().s[46]++;exports.Note=Note;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2FuZHJlcy9MaWJyYXJ5L01vYmlsZSBEb2N1bWVudHMvY29tfmFwcGxlfkNsb3VkRG9jcy9VTEwvQVNJR05BVFVSQVMvUFJBQ1RJQ0FTL0RTSTIwMjEvcHJjdDA4LWZpbGVzeXN0ZW0tbm90ZXMtYXBwL3NyYy9ub3RlLnRzIiwic291cmNlcyI6WyIvVXNlcnMvYW5kcmVzL0xpYnJhcnkvTW9iaWxlIERvY3VtZW50cy9jb21+YXBwbGV+Q2xvdWREb2NzL1VMTC9BU0lHTkFUVVJBUy9QUkFDVElDQVMvRFNJMjAyMS9wcmN0MDgtZmlsZXN5c3RlbS1ub3Rlcy1hcHAvc3JjL25vdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0JBQStCO0FBQy9CLHlCQUF5QjtBQUd6QixNQUFhLElBQUk7SUFJYjs7O0tBR0M7SUFFRCxZQUFZLElBQVk7UUFDcEIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDckIsQ0FBQztJQUVEOzs7S0FHQztJQUVELE9BQU87UUFDSCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQztJQUVEOzs7Ozs7Ozs7S0FTQztJQUVELE9BQU8sQ0FBQyxLQUFhLEVBQUUsSUFBWSxFQUFFLEtBQWE7UUFFOUMsSUFBSSxJQUFJLEdBQVcsT0FBTyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFFdkMsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ3JCLElBQUksRUFBRSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLEtBQUssR0FBRyxPQUFPLENBQUM7Z0JBQzNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQywyQ0FBMkMsQ0FBQyxDQUFDLENBQUM7aUJBQ25FO2dCQUNELElBQUksT0FBTyxHQUFHLEVBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUMsQ0FBQztn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LDJDQUEyQyxDQUFDLENBQUMsQ0FBQztTQUN2RTtJQUNMLENBQUM7Q0FDSjtBQXZKRCxvQkF1SkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBjaGFsayBmcm9tICdjaGFsayc7XG5pbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5cblxuZXhwb3J0IGNsYXNzIE5vdGUge1xuXG4gICAgcHJpdmF0ZSB1c2VyOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICogQ29uc3RydWN0b3IgZGUgbGEgY2xhc2UgTm90YVxuICAgKiBAcGFyYW0gdXNlciB1c3VhcmlvXG4gICAqL1xuXG4gICAgY29uc3RydWN0b3IodXNlcjogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMudXNlciA9IHVzZXI7XG4gICAgfVxuXG4gICAgLyoqXG4gICAqIEdldHRlciBkZSBsYSBjbGFzZSBOb3RhXG4gICAqIEByZXR1cm5zIEBwYXJhbSB1c2VyIG5vbWJyZSBkZSB1c3VhcmlvXG4gICAqL1xuXG4gICAgZ2V0VXNlcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudXNlcjtcbiAgICB9XG5cbiAgICAvKipcbiAgICogRnVuY2nDs24gYWRkTm90ZSwgY3JlYSB1bmEgbnVldmEgbm90YSBlbiBlbCBkaXJlY3RvcmlvIGRlbCB1c3VhcmlvIEBwYXJhbSB1c2VyXG4gICAqIG8gY3JlYSBlbCBkaXJlY3RvcmlvIHNpIG5vIGV4aXN0ZS4gQ2FkYSBub3RhIHNlIGFsbWFjZW5hIGVuIHVuIGZpY2hlcm8gSlNPTlxuICAgKiBzZXBhcmFkby4gXG4gICAqIEBwYXJhbSB0aXRsZSBUw610dWxvIGRlIGxhIG5vdGEgYSBjcmVhclxuICAgKiBAcGFyYW0gYm9keSBDdWVycG8gZGUgbGEgbm90YSBhIGNyZWFyXG4gICAqIEBwYXJhbSBjb2xvciBDb2xvciBkZSBsYSBub3RhIGEgY3JlYXJcbiAgICogTGEgZnVuY2nDs24gQHJldHVybnMgdW4gbWVuc2FqZSBkZSDDqXhpdG8gbyBlcnJvciBzZWfDum4gaGF5YSBwb2RpZG8gY3JlYXIgbGEgbm90YSwgXG4gICAqIG8gZXN0YSB5YSBleGlzdGEuXG4gICAqL1xuXG4gICAgYWRkTm90ZSh0aXRsZTogc3RyaW5nLCBib2R5OiBzdHJpbmcsIGNvbG9yOiBzdHJpbmcpIHtcbiAgICAgICAgXG4gICAgICAgIGxldCBwYXRoOiBzdHJpbmcgPSAndXNlci8nICsgdGhpcy51c2VyO1xuICAgICAgICBcbiAgICAgICAgaWYgKGZzLmV4aXN0c1N5bmMocGF0aCkpIHtcbiAgICAgICAgICAgIGlmIChmcy5leGlzdHNTeW5jKHBhdGggKyBcIi9cIiArIHRpdGxlICsgJy5qc29uJykpXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coY2hhbGsucmVkKFwiRVJST1IgLSBZYSBleGlzdGUgdW5hIG5vdGEgY29uIGVzZSBub21icmVcIikpO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbGV0IG5ld05vdGUgPSB7XCJ0aXRsZVwiOiB0aXRsZSwgXCJib2R5XCI6IGJvZHksIFwiY29sb3JcIjogY29sb3J9O1xuICAgICAgICAgICAgICAgIGxldCBuZXdOb3RlSlNPTiA9IEpTT04uc3RyaW5naWZ5KG5ld05vdGUpO1xuICAgICAgICAgICAgICAgIGZzLndyaXRlRmlsZVN5bmMocGF0aCArIFwiL1wiICsgdGl0bGUgKyAnLmpzb24nLCBuZXdOb3RlSlNPTilcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjaGFsay5ncmVlbihcIk5vdGEgYcOxYWRpZGEgY29ycmVjdGFtZW50ZVwiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBmcy5ta2RpclN5bmMocGF0aCk7XG4gICAgICAgICAgICBsZXQgbmV3Tm90ZSA9IHtcInRpdGxlXCI6IHRpdGxlLCBcImJvZHlcIjogYm9keSwgXCJjb2xvclwiOiBjb2xvcn07XG4gICAgICAgICAgICBsZXQgbmV3Tm90ZUpTT04gPSBKU09OLnN0cmluZ2lmeShuZXdOb3RlKTtcbiAgICAgICAgICAgIGZzLndyaXRlRmlsZVN5bmMocGF0aCArIFwiL1wiICsgdGl0bGUgKyAnLmpzb24nLCBuZXdOb3RlSlNPTilcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYWxrLmdyZWVuKFwiTm90YSBhw7FhZGlkYSBjb3JyZWN0YW1lbnRlXCIpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAgICAgXG4gICAgICAgIFxuXG4gICAgLyoqXG4gICAqIEZ1bmNpw7NuIG1vZGlmeU5vdGUsIG1vZGlmaWNhIHVuYSBub3RhIHlhIGNyZWFkYS4gUGVybWl0ZSBjYW1iaWFyIGVsIGN1ZXJwbyBkZSBsYSBcbiAgICogbm90YSB5IGVsIGNvbG9yLlxuICAgKiBAcGFyYW0gdGl0bGUgVMOtdHVsbyBkZSBsYSBub3RhIHF1ZSBzZSBtb2RpZmljYVxuICAgKiBAcGFyYW0gYm9keSBDdWVycG8gZGUgbGEgbm90YSBxdWUgc2UgbW9kaWZpY2FcbiAgICogQHBhcmFtIGNvbG9yIENvbG9yIGRlIGxhIG5vdGEgcXVlIHNlIG1vZGlmaWNhXG4gICAqIExhIGZ1bmNpw7NuIEByZXR1cm5zIHVuIG1lbnNhamUgZGUgw6l4aXRvIG8gZXJyb3Igc2Vnw7puIGhheWEgcG9kaWRvIG1vZGlmaWNhciBsYSBub3RhLCBcbiAgICogbyBlc3RhIG5vIGV4aXN0YS5cbiAgICovXG4gICAgbW9kaWZ5Tm90ZSh0aXRsZTogc3RyaW5nLCBib2R5OiBzdHJpbmcsIGNvbG9yOiBzdHJpbmcpIHtcblxuICAgICAgICBsZXQgcGF0aDogc3RyaW5nID0gJ3VzZXIvJyArIHRoaXMudXNlcjtcbiAgICAgICAgXG4gICAgICAgIGlmIChmcy5leGlzdHNTeW5jKHBhdGggKyBcIi9cIiArIHRpdGxlICsgJy5qc29uJykpIHtcbiAgICAgICAgICAgIGZzLnJtU3luYyhwYXRoICsgXCIvXCIgKyB0aXRsZSArICcuanNvbicpO1xuICAgICAgICAgICAgbGV0IG1vZE5vdGUgPSB7XCJ0aXRsZVwiOiB0aXRsZSwgXCJib2R5XCI6IGJvZHksIFwiY29sb3JcIjogY29sb3J9O1xuICAgICAgICAgICAgbGV0IG1vZE5vdGVKU09OID0gSlNPTi5zdHJpbmdpZnkobW9kTm90ZSk7XG4gICAgICAgICAgICBmcy53cml0ZUZpbGVTeW5jKHBhdGggKyBcIi9cIiArIHRpdGxlICsgJy5qc29uJywgbW9kTm90ZUpTT04pXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjaGFsay5ncmVlbihcIk5vdGEgbW9kaWZpY2FkYSBjb3JyZWN0YW1lbnRlXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYWxrLnJlZChcIkVSUk9SIC0gTm8gZXhpc3RlIHVuYSBub3RhIGNvbiBlc2Ugbm9tYnJlXCIpKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbiAgICAvKipcbiAgICogRnVuY2nDs24gcmVtb3ZlTm90ZSwgZWxpbWluYSB1bmEgbm90YSB5YSBjcmVhZGEuIFBhcmEgZWxsbyBjb21wcnVlYmEgcXVlIGxhIG5vdGEgZXhpc3RlLlxuICAgKiBAcGFyYW0gdGl0bGUgVMOtdHVsbyBkZSBsYSBub3RhIHF1ZSBzZSBlbGltaW5hXG4gICAqIExhIGZ1bmNpw7NuIEByZXR1cm5zIHVuIG1lbnNhamUgZGUgw6l4aXRvIG8gZXJyb3Igc2Vnw7puIGhheWEgcG9kaWRvIGVsaW1pbmFyIGxhIG5vdGEgb1xuICAgKiBlc3RhIG5vIGV4aXN0YS5cbiAgICovXG5cbiAgICByZW1vdmVOb3RlKHRpdGxlOiBzdHJpbmcpIHtcblxuICAgICAgICBsZXQgcGF0aDogc3RyaW5nID0gJ3VzZXIvJyArIHRoaXMudXNlcjtcbiAgICAgICAgXG4gICAgICAgIGlmIChmcy5leGlzdHNTeW5jKHBhdGggKyBcIi9cIiArIHRpdGxlICsgJy5qc29uJykpIHtcbiAgICAgICAgICAgIGZzLnJtU3luYyhwYXRoICsgXCIvXCIgKyB0aXRsZSArICcuanNvbicpO1xuICAgICAgICAgICAgY29uc29sZS5sb2coY2hhbGsuZ3JlZW4oXCJOb3RhIGVsaW1pbmFkYSBjb3JyZWN0YW1lbnRlXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYWxrLnJlZChcIkVSUk9SIC0gTm8gZXhpc3RlIHVuYSBub3RhIGNvbiBlc2Ugbm9tYnJlXCIpKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbiAgICAvKipcbiAgICogRnVuY2nDs24gbGlzdE5vdGUsIGVsaW1pbmEgdW5hIG5vdGEgeWEgY3JlYWRhLiBQYXJhIGVsbG8gY29tcHJ1ZWJhIHF1ZSBsYSBub3RhIGV4aXN0ZS5cbiAgICogTGEgZnVuY2nDs24gQHJldHVybnMgdW5hIGxpc3RhIGRlIGxvcyB0w610dWxvcyBkZSBsYXMgbm90YXMgZW4gc3UgY29sb3IgY29ycmVzcG9uZGllbnRlIFxuICAgKiBvIHVuIG1lbnNhamUgZGUgZXJyb3Igc2kgbm8gZXhpc3RlbiBub3Rhcy5cbiAgICovXG5cbiAgICBsaXN0Tm90ZXMoKXtcblxuICAgICAgICBsZXQgcGF0aDogc3RyaW5nID0gJ3VzZXIvJyArIHRoaXMudXNlcjtcbiAgICAgICAgXG4gICAgICAgIGlmIChmcy5yZWFkZGlyU3luYyhwYXRoKS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYWxrLnJlZChcIkVSUk9SIC0gRWwgdXN1YXJpbyBubyBkaXNwb25lIGRlIG5vdGFzXCIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxldCBub3RlcyA9IGZzLnJlYWRkaXJTeW5jKHBhdGgpO1xuICAgICAgICAgICAgbm90ZXMuZm9yRWFjaChub3RlID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgcmVhZE5vdGVKU09OID0gZnMucmVhZEZpbGVTeW5jKHBhdGggKyBcIi9cIiArIG5vdGUsIFwidXRmLThcIik7XG4gICAgICAgICAgICAgICAgbGV0IHJlYWROb3RlID0gSlNPTi5wYXJzZShyZWFkTm90ZUpTT04pO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYWxrLmtleXdvcmQocmVhZE5vdGVbXCJjb2xvclwiXSkocmVhZE5vdGVbXCJ0aXRsZVwiXSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICogRnVuY2nDs24gcmVhZE5vdGUsIGxlZSB1bmEgbm90YSBkZWwgdXN1YXJpbyB5IGxhIG11ZXN0cmEgcG9yIHBhbnRhbGxhLiBQYXJhIGVsbG8gXG4gICAqIGNvbXBydWViYSBxdWUgbGEgbm90YSBleGlzdGUuXG4gICAqIEBwYXJhbSB0aXRsZSB0w610dWxvIGRlIGxhIG5vdGEgYSBtb3N0cmFyXG4gICAqIExhIGZ1bmNpw7NuIEByZXR1cm5zIGVsIGN1ZXJwbyBkZSBsYSBub3RhIGVuIHN1IGNvbG9yIGNvcnJlc3BvbmRpZW50ZVxuICAgKiBvIHVuIG1lbnNhamUgZGUgZXJyb3Igc2kgbm8gZXhpc3RlIGxhIG5vdGEuXG4gICAqL1xuXG4gICAgcmVhZE5vdGUodGl0bGU6IHN0cmluZyl7XG5cbiAgICAgICAgbGV0IHBhdGg6IHN0cmluZyA9ICd1c2VyLycgKyB0aGlzLnVzZXI7XG4gICAgICAgIFxuICAgICAgICBpZiAoZnMuZXhpc3RzU3luYyhwYXRoICsgXCIvXCIgKyB0aXRsZSArICcuanNvbicpKSB7XG4gICAgICAgICAgICBsZXQgcmVhZE5vdGVKU09OID0gZnMucmVhZEZpbGVTeW5jKHBhdGggKyBcIi9cIiArIHRpdGxlICsgJy5qc29uJywgXCJ1dGYtOFwiKTtcbiAgICAgICAgICAgIGxldCByZWFkTm90ZSA9IEpTT04ucGFyc2UocmVhZE5vdGVKU09OKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNoYWxrLmtleXdvcmQocmVhZE5vdGVbXCJjb2xvclwiXSkocmVhZE5vdGVbXCJib2R5XCJdKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjaGFsay5yZWQoXCJFUlJPUiAtIE5vIGV4aXN0ZSB1bmEgbm90YSBjb24gZXNlIG5vbWJyZVwiKSk7XG4gICAgICAgIH1cbiAgICB9XG59Il19
//# sourceMappingURL=data:application/json;charset=utf-8;base64,